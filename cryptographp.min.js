/**
 * Copyright 2006-2007 Sylvain Brison
 * Copyright 2011-2021 Christoph M. Becker
 *
 * This file is part of Cryptographp_XH.
 *
 * Cryptographp_XH is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Cryptographp_XH is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Cryptographp_XH.  If not, see <http://www.gnu.org/licenses/>.
 */

(function () {
    "use strict";

    if (!('visibilityState' in document)) {
        return;
    }

    var currentAudio;

    var each = Array.prototype.forEach;

    function firstCommentChild(element) {
        var comment = element.firstChild;
        while (comment && comment.nodeType !== 8) {
            comment = comment.nextSibling;
        }
        return comment;
    }

    function cryptographp(captcha) {
        if (captcha.getAttribute("data-initialized")) {
            return;
        }
        each.call(captcha.getElementsByClassName("cryptographp_audio"), function (element) {
            if (("Audio" in window) && (new Audio).canPlayType("audio/x-wav")) {
                element.onclick = (function () {
                    var link = this;
                    currentAudio = currentAudio || new Audio();
                    currentAudio.onerror = (function () {
                        link.onclick = null;
                    });
                    currentAudio.src = link.href.replace("&cryptographp_download=yes", "");
                    currentAudio.play();
                    return false;
                });
            }
        });
        each.call(captcha.getElementsByClassName("cryptographp_reload_container"), function (container) {
            container.innerHTML = firstCommentChild(container).nodeValue;
            each.call(container.getElementsByClassName("cryptographp_reload"), function (anchor) {
                anchor.onclick = (function () {
                    each.call(captcha.getElementsByClassName("cryptographp_image"), function (image) {
                        image.src = anchor.getAttribute("data-image") + "&" + new Date().getTime();
                    });
                    each.call(captcha.getElementsByClassName("cryptographp_audio"), function (link) {
                        link.href = anchor.getAttribute("data-audio") + "&" + new Date().getTime();
                    });
                    if (currentAudio) {
                        currentAudio.pause();
                    }
                    return false;
                });
            });
        });
        captcha.setAttribute("data-initialized", "1");
    }

    document.addEventListener("DOMContentLoaded", function () {
        each.call(document.getElementsByClassName("cryptographp"), cryptographp);
        if ("MutationObserver" in window) {
            var observer = new MutationObserver(function () {
                each.call(document.getElementsByClassName("cryptographp"), cryptographp);
            });
            observer.observe(document.body, {childList: true, subtree: true});
        }
    });
}());
